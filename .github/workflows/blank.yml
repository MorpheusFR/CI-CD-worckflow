name: Python Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:  # Added trigger for pull request events
    types: [opened, synchronized]  # Trigger on opened and synchronized pull requests

jobs:
  build:
    runs-on: ubuntu-latest  # Selecting the operating system
    
    steps:
      - name: Checkout code  # Step to clone the project
        uses: actions/checkout@v3
          
      - name: Install dependencies  # Step to install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Adjust as per your project setup
        
      - name: Build project  # Step to build the project
        run: |
          echo "No build step required for this Flask application."
        
      - name: Run unit tests  # Step to run unit tests
        run: |
          echo "Tests to be added"
        
      - name: Capture workflow output  # Capture output for screenshot
        run: |
          echo "This is the workflow output captured for screenshot."
          # Add any additional commands whose output you want to capture

      - name: Create pull request comment (optional)  # Add a comment to the PR
        uses: actions/github-script@v6  # Requires additional setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'CI/CD workflow completed successfully!'
            })

      # This step is not recommended for security reasons (see previous explanation)
      # - name: Update project code (not recommended)
      #   run: |
      #     # This step should be done manually or in a separate deployment workflow

      # Add more steps as needed for your specific project setup
